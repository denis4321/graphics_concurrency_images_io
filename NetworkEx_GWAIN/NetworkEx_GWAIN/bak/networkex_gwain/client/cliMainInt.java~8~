package networkex_gwain.client;

import java.awt.BorderLayout;
import java.awt.Dimension;

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.GridBagLayout;
import java.awt.*;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowAdapter;
import networkex_gwain.common.*;
import java.net.*;

public class cliMainInt extends JFrame implements ConnectionListener {
    JPanel contentPane;
    GridBagLayout gridBagLayout1 = new GridBagLayout();
    JTextField AddrField = new JTextField();
    JLabel jLabel1 = new JLabel();
    JButton ConnectBut = new JButton();
    JScrollPane jScrollPane1 = new JScrollPane();
    JTextArea OutArea = new JTextArea();
    JTextField MessField = new JTextField();
    JButton SendBut = new JButton();
    private Connection conn = null;

    public cliMainInt() {
        try {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            jbInit();
            setState(false);
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    public void setState(boolean connected){
        AddrField.setEnabled(!connected);
        ConnectBut.setEnabled(!connected);
        SendBut.setEnabled(connected);
        MessField.setEnabled(connected);
    }

    /**
     * Component initialization.
     *
     * @throws java.lang.Exception
     */
    private void jbInit() throws Exception {
        contentPane = (JPanel) getContentPane();
        contentPane.setLayout(gridBagLayout1);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(new Dimension(400, 300));
        setTitle("Болталка - клиент");
        this.addWindowListener(new cliMainInt_this_windowAdapter(this));
        jLabel1.setFont(new java.awt.Font("Tahoma", Font.BOLD, 12));
        jLabel1.setText("IP:");
        ConnectBut.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11));
        ConnectBut.setText("Соединиться");
        ConnectBut.addActionListener(new cliMainInt_ConnectBut_actionAdapter(this));
        OutArea.setBackground(Color.black);
        OutArea.setFont(new java.awt.Font("SansSerif", Font.PLAIN, 11));
        OutArea.setForeground(Color.green);
        OutArea.setEditable(false);
        SendBut.setFont(new java.awt.Font("Tahoma", Font.BOLD, 11));
        SendBut.setForeground(Color.blue);
        SendBut.setText(">>>");
        AddrField.setText("127.0.0.1");
        contentPane.add(jLabel1, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0
                , GridBagConstraints.CENTER, GridBagConstraints.NONE,
                new Insets(5, 5, 5, 5), 0, 0));
        contentPane.add(AddrField,
                        new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0
                                               , GridBagConstraints.CENTER,
                                               GridBagConstraints.HORIZONTAL,
                                               new Insets(5, 5, 5, 5), 0, 0));
        jScrollPane1.getViewport().add(OutArea);
        contentPane.add(ConnectBut, new GridBagConstraints(2, 0, 2, 1, 0.0, 0.0
                , GridBagConstraints.CENTER, GridBagConstraints.NONE,
                new Insets(5, 5, 5, 5), 0, 0));
        contentPane.add(SendBut, new GridBagConstraints(3, 2, 1, 1, 0.0, 0.0
                , GridBagConstraints.CENTER, GridBagConstraints.NONE,
                new Insets(5, 5, 5, 5), 0, 0));
        contentPane.add(jScrollPane1,
                        new GridBagConstraints(0, 1, 4, 1, 1.0, 1.0
                                               , GridBagConstraints.CENTER,
                                               GridBagConstraints.BOTH,
                                               new Insets(5, 5, 5, 5), 0, 0));
        contentPane.add(MessField, new GridBagConstraints(0, 2, 3, 1, 1.0, 0.0
                , GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,
                new Insets(5, 5, 5, 5), 0, 0));
    }

    public void println(String msg){
        OutArea.append(msg+"\n");
    }

    public void connect() {
        try{
            Socket s = new Socket(AddrField.getText(), 3334);
            new Connection(s, this);
        } catch (Exception ex){
            ex.printStackTrace();
        }
    }

    public void closeConnection() {
        //setState(false);
        if (conn!=null){
            conn.close();
        } else {
            System.exit(0);
        }
    }

    public void connectionCreated(Connection conn) {
        setState(true);
        this.conn = conn;
    }

    public void connectionClosed(Connection conn) {
        System.exit(0);
    }

    public void connectionError(Connection conn, Exception ex) {
        System.out.println(ex);
    }

    public void messageReceived(Connection conn, String mess) {
        println(mess);
    }
}


class cliMainInt_this_windowAdapter extends WindowAdapter {
    private cliMainInt adaptee;
    cliMainInt_this_windowAdapter(cliMainInt adaptee) {
        this.adaptee = adaptee;
    }

    public void windowClosing(WindowEvent e) {
        adaptee.closeConnection();
    }
}


class cliMainInt_ConnectBut_actionAdapter implements ActionListener {
    private cliMainInt adaptee;
    cliMainInt_ConnectBut_actionAdapter(cliMainInt adaptee) {
        this.adaptee = adaptee;
    }

    public void actionPerformed(ActionEvent e) {
        adaptee.connect();
    }
}
