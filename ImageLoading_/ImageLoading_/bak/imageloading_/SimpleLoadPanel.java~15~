package imageloading_;

import java.awt.BorderLayout;

import javax.swing.JPanel;
import javax.swing.JButton;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.Color;
import java.awt.image.ImageObserver;
import javax.swing.SwingUtilities;

public class SimpleLoadPanel extends JPanel {
    BorderLayout borderLayout1 = new BorderLayout();
    JButton LoadImageBut = new JButton();
    private Image img = null;
    public static final String imgName = "Закат.jpg";

    public SimpleLoadPanel() {
        try {
            jbInit();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    private void jbInit() throws Exception {
        this.setLayout(borderLayout1);
        LoadImageBut.setText("Загрузить изображение");
        LoadImageBut.addActionListener(new
                SimpleLoadPanel_LoadImageBut_actionAdapter(this));
        this.setBackground(Color.white);
        this.add(LoadImageBut, java.awt.BorderLayout.SOUTH);
    }

    public void LoadImage() {
        img = Toolkit.getDefaultToolkit().getImage(imgName);//Загрузка картинки
        repaint();
    }

    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        if (img!=null){
            g.drawImage(img, 0, 0, getWidth(), getHeight(), new ImageObserver(){//наблюдает за загрузкой изображения
                public boolean imageUpdate(Image img, int infoflags, int x,
                                           int y, int width, int height) {
                    boolean result = true;
                    boolean repaint = false;
                    if ((infoflags&ImageObserver.WIDTH)>0){
                        System.out.print("WIDTH ");
                        repaint = true;
                    }
                    if ((infoflags&ImageObserver.HEIGHT)>0){
                        System.out.print("HEIGHT ");
                        repaint = true;
                    }
                    if ((infoflags&ImageObserver.PROPERTIES)>0){
                        System.out.print("PROPERTIES ");
                        repaint = true;
                    }
                    if ((infoflags&ImageObserver.SOMEBITS)>0){
                        System.out.print("SOMEBITS ");
                        repaint = true;
                    }
                    if ((infoflags&ImageObserver.FRAMEBITS)>0){
                        System.out.print("FRAMEBITS ");
                    }
                    if ((infoflags&ImageObserver.ALLBITS)>0){
                        System.out.print("ALLBITS ");
                        result = false;
                        repaint = true;
                    }
                    System.out.println("x="+x+" y="+y+" w="+width+" h="+height);
                    if (repaint) {
                        SwingUtilities.invokeLater(new Runnable() {
                            public void run() {
                                try {
                                    Thread.sleep(1);
                                } catch (InterruptedException ex) {
                                    ex.printStackTrace();
                                }
                                repaint();
                            }
                        });
                    }
                    return result;
                }
            });
        }
    }
}


class SimpleLoadPanel_LoadImageBut_actionAdapter implements ActionListener {
    private SimpleLoadPanel adaptee;
    SimpleLoadPanel_LoadImageBut_actionAdapter(SimpleLoadPanel adaptee) {
        this.adaptee = adaptee;
    }

    public void actionPerformed(ActionEvent e) {
        adaptee.LoadImage();
    }
}
